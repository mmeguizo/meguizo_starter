{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.html","./src/app/components/home/home.component.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/app.module.ts","./src/app/components/notfound/notfound.component.ts","./src/app/app-paths.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/path-resolve.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"jumbotron text-center\">\r\n  <h1>MEAN APP</h1>\r\n  <p class=\"lead\">STARTER APP by <strong>Mark Meguizo</strong></p>\r\n\r\n  <ng-container *ngIf=\"auth.loggedOut()\">\r\n    <div class=\"btn-group me-2\" role=\"group\">\r\n      <a class=\"btn btn-primary\" routerLink=\"/register\" role=\"button\">Register</a>\r\n    </div>\r\n    <div class=\"btn-group me-2\" role=\"group\">\r\n      <a class=\"btn btn-success\" routerLink=\"/login\" role=\"button\">Login</a>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n<br>\r\n<div class=\"row\">\r\n\r\n\r\n  <div class=\"col-sm-6 col-md-4 mb-3\">\r\n    <div class=\"card\">\r\n      <img class=\"mx-auto d-block\" src=\"https://image.flaticon.com/icons/svg/417/417745.svg\" alt=\"placeholder image\"\r\n        width=\"140\" height=\"140\">\r\n      <div class=\"card-body\">\r\n        <h3>MongoDB</h3>\r\n        <p class=\"card-text\">MongoDB is a free and open-source cross-platform document-oriented database program. This\r\n          NoSQL database\r\n          program uses JSON-like documents with schemas.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-sm-6 col-md-4 mb-3\">\r\n    <div class=card> <img class=\"mx-auto d-block\" src=\"https://image.flaticon.com/icons/svg/417/417746.svg\"\r\n        alt=\"Generic placeholder image\" width=\"140\" height=\"140\">\r\n      <div class=\"card-body\">\r\n        <h3>ExpressJS</h3>\r\n        <p class=\"card-text\">Express.js is a Node.js framework. Node.js is a platform that allows JavaScript to be used\r\n          outside the Web\r\n          Browsers, for creating web and network applications.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-sm-6 col-md-4 mb-3\">\r\n    <div class=card> <img class=\"mx-auto d-block\" src=\"https://image.flaticon.com/icons/svg/417/417751.svg\"\r\n        alt=\"Generic placeholder image\" width=\"140\" height=\"140\">\r\n      <div class=\"card-body\">\r\n        <h3>Angular 2</h3>\r\n        <p class=\"card-text\">Angular is a development platform for building mobile and desktop web applications. Ut\r\n          dignissim eleifend\r\n          maximus. Ut dignissim eleifend maximus. Ut dignissim eleifend.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"col-sm-6 col-md-4 mb-3\">\r\n    <div class=card> <img class=\"mx-auto d-block\" src=\"https://image.flaticon.com/icons/svg/417/417754.svg\"\r\n        alt=\"Generic placeholder image\" width=\"140\" height=\"140\">\r\n      <div class=\"card-body\">\r\n        <h3>NodeJS</h3>\r\n        <p class=\"card-text\">Node.js is a JavaScript runtime built on Chrome's V8 JavaScript engine. Node.js uses an\r\n          event-driven,\r\n          non-blocking I/O model that makes it lightweight and efficient.</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!--\r\n\r\n\r\n  <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n -->\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(\r\n\r\n    public auth: AuthService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n  public username;\r\n  public email;\r\n\r\n  constructor(\r\n    private auth: AuthService,\r\n    // public jwtHelper: JwtHelperService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n\r\n    this.auth.getProfile().subscribe((profile: any) => {\r\n\r\n\r\n\r\n      this.username = profile.data.username\r\n      this.email = profile.data.email\r\n\r\n    })\r\n\r\n  }\r\n\r\n}\r\n\r\n","<h2 class=\"page-header\">Profile Page</h2>\r\n<ul class=\"list-group\">\r\n  <li class=\"list-group-item\">Username: {{ username | titlecase}}</li>\r\n  <li class=\"list-group-item\">Email: {{ email | titlecase}}</li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  public name;\r\n\r\n  constructor(\r\n\r\n    private auth: AuthService\r\n\r\n  ) {\r\n\r\n    this.name = this.auth.getTokenUsername()\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n\r\n  }\r\n\r\n}\r\n","<h1 class=\"page-header\">Hi {{ name | titlecase }}</h1>\r\n<h3>Welcome to your Dashboard</h3>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'Hello from angular mark meguizo';\r\n}\r\n","<!-- <h1> {{title | titlecase}}</h1> -->\r\n<app-navbar></app-navbar>\r\n<br>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  messageClass;\r\n  message;\r\n  processing = false;\r\n  form: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n\r\n  ) {\r\n    this.createForm(); // Create Login Form when component is constructed\r\n  }\r\n\r\n  // Function to create login form\r\n  createForm() {\r\n    this.form = this.formBuilder.group({\r\n      username: ['', Validators.required], // Username field\r\n      password: ['', Validators.required] // Password field\r\n    });\r\n  }\r\n\r\n  // Function to disable form\r\n  disableForm() {\r\n    this.form.controls['username'].disable(); // Disable username field\r\n    this.form.controls['password'].disable(); // Disable password field\r\n  }\r\n\r\n  // Function to enable form\r\n  enableForm() {\r\n    this.form.controls['username'].enable(); // Enable username field\r\n    this.form.controls['password'].enable(); // Enable password field\r\n  }\r\n\r\n  // Functiont to submit form and login user\r\n  onLoginSubmit() {\r\n    this.processing = true; // Used to submit button while is being processed\r\n    this.disableForm(); // Disable form while being process\r\n    // Create user object from user's input\r\n    const user = {\r\n      username: this.form.get('username').value, // Username input field\r\n      password: this.form.get('password').value // Password input field\r\n    }\r\n\r\n    // Function to send login data to API\r\n    this.authService.login(user).subscribe((data: any) => {\r\n\r\n      // Check if response was a success or error\r\n      if (!data.success) {\r\n        // this.messageClass = 'alert alert-danger'; // Set bootstrap error class\r\n        // this.message = data.message; // Set error message\r\n        this.toastr.error('Failed', data.message);\r\n        this.processing = false; // Enable submit button\r\n        this.enableForm(); // Enable form for editting\r\n      } else {\r\n        // this.messageClass = 'alert alert-success'; // Set bootstrap success class\r\n        // this.message = data.message; // Set success message\r\n        this.toastr.success('Success', data.message);\r\n        // Function to store user's token in client local storage\r\n        this.authService.storeUserData(data.token, data.user, data.userToken);\r\n        // After 2 seconds, redirect to dashboard page\r\n        setTimeout(() => {\r\n          this.router.navigate(['/profile']); // Navigate to dashboard view\r\n        }, 1000);\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<h2 class=\"page-header\">Login</h2>\r\n\r\n<!-- Custom Success/Error Message -->\r\n<div class=\"row show-hide-message\">\r\n  <div [ngClass]=\"messageClass\">\r\n    {{ message }}\r\n  </div>\r\n</div>\r\n\r\n<!-- Login Form -->\r\n<form [formGroup]=\"form\" (submit)=\"onLoginSubmit()\">\r\n\r\n  <!-- Username Field -->\r\n  <div class=\"form-group\">\r\n    <label for=\"username\">Username</label>\r\n    <div\r\n      [ngClass]=\"{'has-error': form.controls.username.errors && form.controls.username.dirty, 'has-success': form.controls.username.valid && form.controls.username.dirty }\">\r\n      <input class=\"form-control\" type=\"text\" name=\"username\" formControlName=\"username\" />\r\n      <!-- Validation -->\r\n      <ul class=\"help-block\">\r\n        <li *ngIf=\"form.controls.username.errors?.required && form.controls.username.dirty\">This field is required.</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Password Field  -->\r\n  <div class=\"form-group\">\r\n    <label for=\"password\">Password</label>\r\n    <div\r\n      [ngClass]=\"{'has-error': form.controls.password.errors && form.controls.password.dirty, 'has-success': form.controls.password.valid && form.controls.password.dirty }\">\r\n      <input class=\"form-control\" type=\"password\" name=\"password\" formControlName=\"password\" />\r\n      <!-- Validation -->\r\n      <ul class=\"help-block\">\r\n        <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">This field is required.</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  <!-- Submit Button -->\r\n  <input [disabled]=\"!form.valid || processing\" class=\"btn btn-primary\" type=\"submit\" value=\"Login\" />\r\n</form>\r\n","import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormBuilder, FormGroup, Validators, AbstractControl } from '@angular/forms';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { paths } from 'src/app/app-paths';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  form = new FormGroup({\r\n\r\n    email: new FormControl(),\r\n    username: new FormControl(),\r\n    password: new FormControl(),\r\n\r\n  });\r\n\r\n\r\n  public data: void;\r\n  public registerUserData: any;\r\n  public json\r\n  public messageClass;\r\n  public alertMessages;\r\n  public processing: boolean = false;\r\n  public emailValid;\r\n  public emailMessage;\r\n  public usernameValid;\r\n  public usernameMessage;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private auth: AuthService,\r\n    private toastr: ToastrService,\r\n    private router: Router\r\n  ) {\r\n    this.createForm(); // Create Angular 2 Form when component loads\r\n  }\r\n\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'Unknown error!';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side errors\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // Server-side errors\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    //  window.alert(errorMessage);\r\n\r\n    return throwError(this.usernameMessage = errorMessage);\r\n  }\r\n\r\n\r\n\r\n  // Function to create registration form\r\n  createForm() {\r\n\r\n    this.form = this.formBuilder.group({\r\n\r\n      email: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(5), // Minimum length is 5 characters\r\n        Validators.maxLength(30), // Maximum length is 30 characters\r\n        this.validateEmail // Custom validation\r\n      ])],\r\n      username: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(3), // Minimum length is 3 characters\r\n        Validators.maxLength(15), // Maximum length is 15 characters\r\n        this.validateUsername // Custom validation\r\n      ])],\r\n      password: ['', Validators.compose([\r\n        Validators.required, // Field is required\r\n        Validators.minLength(8), // Minimum length is 8 characters\r\n        Validators.maxLength(35), // Maximum length is 35 characters\r\n        this.validatePassword // Custom validation\r\n      ])],\r\n      // Confirm Password Input\r\n      confirm: ['', [Validators.required, this.matchingPasswords.bind(this)]] // Field is required\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  // Function to disable the registration form\r\n  disableForm() {\r\n    this.form.controls['email'].disable();\r\n    this.form.controls['username'].disable();\r\n    this.form.controls['password'].disable();\r\n    this.form.controls['confirm'].disable();\r\n  }\r\n\r\n  // Function to enable the registration form\r\n  enableForm() {\r\n    this.form.controls['email'].enable();\r\n    this.form.controls['username'].enable();\r\n    this.form.controls['password'].enable();\r\n    this.form.controls['confirm'].enable();\r\n  }\r\n\r\n\r\n  // Function to validate e-mail is proper format\r\n  validateEmail(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n    // Test email against regular expression\r\n    if (!controls.value) { return { 'validateEmail': true } }\r\n\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid email\r\n    } else {\r\n      return { 'validateEmail': true } // Return as invalid email\r\n    }\r\n  }\r\n\r\n  // Function to validate username is proper format\r\n  validateUsername(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^[a-zA-Z0-9]+$/);\r\n\r\n    if (!controls.value) { return { 'validateUsername': true } }\r\n    // Test username against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid username\r\n    } else {\r\n      return { 'validateUsername': true } // Return as invalid username\r\n    }\r\n  }\r\n\r\n  // Function to validate password\r\n  validatePassword(controls) {\r\n    // Create a regular expression\r\n    const regExp = new RegExp(/^(?=.*?[a-z])(?=.*?[A-Z])(?=.*?[\\d])(?=.*?[\\W]).{8,35}$/);\r\n    // Test password against regular expression\r\n    if (regExp.test(controls.value)) {\r\n      return null; // Return as valid password\r\n    } else {\r\n      return { 'validatePassword': true } // Return as invalid password\r\n    }\r\n  }\r\n\r\n  matchingPasswords(control: FormControl) {\r\n    return control.value === this.form.get('password').value ? null : { matchingPasswords: true }\r\n  }\r\n\r\n\r\n  onRegisterSubmit(form) {\r\n\r\n    this.processing = true; // Used to notify HTML that form is in processing, so that it can be disabled\r\n    this.disableForm(); // Disable the form\r\n\r\n    const user = {\r\n\r\n      email: form.value.email,\r\n      username: form.value.username,\r\n      password: form.value.password,\r\n\r\n    }\r\n\r\n\r\n    this.auth.registerUser(user).subscribe((res: any) => {\r\n\r\n      if (res.success) {\r\n        this.registerUserData = res.data\r\n        this.toastr.success('Success', res.message);\r\n\r\n        setTimeout(() => {\r\n          //  this.router.navigateByUrl('/home');\r\n          //  this.router.navigateByUrl('login', { skipLocationChange: false });\r\n          //this.router.navigate['login']\r\n          this.router.navigateByUrl('login', { skipLocationChange: false });\r\n        }, 2000)\r\n      } else {\r\n        this.toastr.error('Failed', res.message);\r\n        this.processing = false; // Re-enable submit button\r\n        this.enableForm(); // Re-enable form\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n\r\n  checkEmail() {\r\n\r\n    this.auth.checkEmail(this.form.get('email').value).subscribe((res: any) => {\r\n\r\n      if (res.success) {\r\n        this.emailValid = true;\r\n        this.emailMessage = res.message\r\n      } else {\r\n        this.emailValid = false;\r\n        this.emailMessage = res.message\r\n      }\r\n    })\r\n\r\n  }\r\n  checkUsername() {\r\n\r\n    if (this.form.get('username')) {\r\n      this.auth.checkUsername(this.form.get('username').value).subscribe((res: any) => {\r\n        if (res.success) {\r\n          this.usernameValid = true;\r\n          this.usernameMessage = res.message\r\n        } else {\r\n          this.usernameValid = false;\r\n          this.usernameMessage = res.message\r\n        }\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleClear() {\r\n    this.form.reset()\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// export function matchingPasswords(control: AbstractControl) {\r\n\r\n//   console.log({ matchingPasswords: control.value });\r\n\r\n//   return { matchingPasswords: true }\r\n\r\n//   // if (control.value == 13445) {\r\n//   //   return { matchingPasswords: true }\r\n//   // }\r\n//   // return null;\r\n// }\r\n","<h1 class=\"page-header centerme\">Register Page</h1>\r\n\r\n<!-- <div class=\"row show-hide-message\">\r\n  <div [ngClass]=\"messageClass\" role=\"alert\">\r\n    {{ alertMessages | titlecase }}\r\n  </div>\r\n</div> -->\r\n\r\n<div class=\"modal-body\">\r\n  <form [formGroup]=\"form\" (submit)=\"onRegisterSubmit(form)\">\r\n    <div class=\"form-group\">\r\n      <label for=\"username\">Username</label>\r\n      <div>\r\n        <input type=\"text\" name=\"username\"\r\n          [ngClass]=\"{'is-invalid': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'is-valid': !form.controls.username.errors && usernameValid}\"\r\n          class=\"form-control\" autocomplete=\"off\" placeholder=\"*Username\" formControlName=\"username\"\r\n          (blur)=\"checkUsername()\" />\r\n\r\n        <ul class=\"help-block\">\r\n          <li *ngIf=\"form.controls.username.errors?.required && form.controls.username.dirty\">This field is required\r\n          </li>\r\n          <li [ngClass]=\"{ 'text-success' : usernameValid, 'text-danger' : !usernameValid }\" *ngIf=\"usernameMessage\">\r\n            {{usernameMessage}}</li>\r\n          <li\r\n            *ngIf=\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \">\r\n            Minimum characters: 3, Maximum characters: 15</li>\r\n          <li *ngIf=\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\">Username must not\r\n            have any special characters</li>\r\n\r\n        </ul>\r\n\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <div>\r\n        <input type=\"text\" name=\"email\"\r\n          [ngClass]=\"{'is-invalid': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'is-valid': !form.controls.email.errors && emailValid}\"\r\n          class=\"form-control\" autocomplete=\"off\" placeholder=\"*Email\" formControlName=\"email\" (blur)=\"checkEmail()\" />\r\n\r\n        <ul class=\"help-block\">\r\n          <li [ngClass]=\"{ 'text-success' : emailValid, 'text-danger' : !emailValid }\" *ngIf=\"emailMessage\">\r\n            {{emailMessage}}</li>\r\n          <li *ngIf=\"form.controls.email.errors?.required && form.controls.email.dirty\">This field is required</li>\r\n          <li\r\n            *ngIf=\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\">\r\n            Minimum characters: 5, Maximum characters: 30</li>\r\n          <li *ngIf=\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\">This must be a valid e-mail\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <div>\r\n        <input type=\"password\" name=\"password\"\r\n          [ngClass]=\"{'is-invalid': (form.controls.password.errors && form.controls.password.dirty), 'is-valid': !form.controls.password.errors}\"\r\n          class=\"form-control\" autocomplete=\"off\" placeholder=\"*Password\" formControlName=\"password\" />\r\n        <ul class=\"help-block\">\r\n          <li *ngIf=\"form.controls.password.errors?.required && form.controls.password.dirty\">This field is required\r\n          </li>\r\n          <li\r\n            *ngIf=\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \">\r\n            Minimum characters: 8, Maximum characters: 35</li>\r\n          <li *ngIf=\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\">Password must be\r\n            at\r\n            least 8 characters but no more than 35</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"confirm\">Confirm Password</label>\r\n      <div>\r\n        <input type=\"password\" name=\"confirm\"\r\n          [ngClass]=\"{'is-invalid': (form.controls.confirm?.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'is-valid': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\"\r\n          class=\"form-control\" autocomplete=\"off\" placeholder=\"*Confirm Password\" formControlName=\"confirm\" />\r\n        <ul class=\"help-block\">\r\n          <li *ngIf=\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\">This field is required</li>\r\n          <li *ngIf=\"form.errors?.matchingPasswords && form.controls.confirm.dirty\">Password do not match</li>\r\n        </ul>\r\n      </div>\r\n      <!-- {{ form.errors.matchingPasswords | json }} -->\r\n    </div>\r\n    <div class=\"modal-footer no-outline\" style=\"border-top: 0px;\">\r\n      <input type=\"submit\" class=\"btn btn-danger clearBtn\" (click)=\"handleClear()\" value=\"Clear\" />\r\n      <!--   <input [disabled]=\"!form.valid\" type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" /> -->\r\n      <input type=\"submit\" [disabled]=\"!form.valid || processing || !emailValid || !usernameValid\"\r\n        class=\"btn btn-primary\" value=\"Submit\" />\r\n\r\n    </div>\r\n  </form>\r\n</div>\r\n","import { NgModule, } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NotfoundComponent } from './components/notfound/notfound.component';\r\nimport { PathResolveService } from './path-resolve.service';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { AuthService } from './services/auth.service';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { JwtModule } from \"@auth0/angular-jwt\";\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem(\"token\");\r\n}\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    NotfoundComponent,\r\n    DashboardComponent,\r\n    RegisterComponent,\r\n    LoginComponent,\r\n    ProfileComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        // allowedDomains: ['localhost:3000'],\r\n        // disallowedRoutes: [\"http://localhost:3000/authentication/login\"],\r\n      },\r\n    }),\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule, // required animations module\r\n    ToastrModule.forRoot({\r\n      timeOut: 3000,\r\n      positionClass: 'toast-bottom-right',\r\n      preventDuplicates: true,\r\n    }), // ToastrModule added\r\n\r\n\r\n\r\n  ],\r\n  exports: [\r\n\r\n  ],\r\n  providers: [PathResolveService, AuthService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  template: `\r\n    <h2>\r\n      404 - Page not found\r\n    </h2>\r\n    <p *ngIf=\"path\">You might want to go to the <a [routerLink]=\"path\">{{ path | titlecase }} page</a></p>\r\n  `,\r\n  styles: []\r\n})\r\nexport class NotfoundComponent implements OnInit {\r\n  path: string;\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.route.data.pipe(take(1))\r\n      .subscribe((data: { path: string }) => {\r\n        this.path = data.path;\r\n      });\r\n  }\r\n}\r\n\r\n// @Component({\r\n//   selector: 'app-notfound',\r\n//   templateUrl: './notfound.component.html',\r\n//   styleUrls: ['./notfound.component.scss']\r\n// })\r\n// export class NotfoundComponent implements OnInit {\r\n\r\n//   constructor() { }\r\n\r\n//   ngOnInit(): void {\r\n//   }\r\n\r\n// }\r\n","export const paths = {\r\n  home: 'home',\r\n  dashboard: 'dashboard',\r\n  register: 'register',\r\n  login: 'login',\r\n  profile: 'profile',\r\n};\r\n","<nav class=\"navbar navbar-expand-lg navbar-dar bg-dark\">\r\n  <div class=\"container-fluid\">\r\n    <!-- <a class=\"navbar-brand\">tester</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\"\r\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\">tester</span>\r\n      <span class=\"navbar-toggler-icon\">tester</span>\r\n      <span class=\"navbar-toggler-icon\">tester</span>\r\n      <span class=\"navbar-toggler-icon\">tester</span>\r\n    </button> -->\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\"\r\n            routerLink=\"/home\">MEAN Technology News</a>\r\n        </li>\r\n\r\n\r\n      </ul>\r\n      <ul class=\"navbar-nav mb-2 mb-lg-0 navbar-right\">\r\n        <li *ngIf=\"!auth.loggedOut()\" class=\"nav-item\">\r\n          <a class=\"nav-link active\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\"\r\n            aria-current=\"page\" routerLink=\"/dashboard\">Dashboard</a>\r\n        </li>\r\n        <li *ngIf=\"!auth.loggedOut()\" class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\"\r\n            routerLink=\"/profile\">Profile</a>\r\n        </li>\r\n        <li *ngIf=\"!auth.loggedOut()\" class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\"\r\n            routerLink=\"/home\">Blog</a>\r\n        </li>\r\n        <li *ngIf=\"auth.loggedOut()\" class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\"\r\n            routerLink=\"/login\">Login</a>\r\n        </li>\r\n        <li *ngIf=\"!auth.loggedOut()\" class=\"nav-item\">\r\n          <a class=\"nav-link pointer\" (click)=\"logout()\">Logout</a>\r\n        </li>\r\n        <li *ngIf=\"auth.loggedOut()\" class=\"nav-item\">\r\n          <a class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact: true}\"\r\n            routerLink=\"/register\">Register</a>\r\n        </li>\r\n      </ul>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  public\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private router: Router,\r\n    private toaster: ToastrService\r\n\r\n  ) {\r\n\r\n\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  logout() {\r\n\r\n    if (confirm('Log out?')) {\r\n      // Save it!\r\n      this.auth.logout();\r\n      this.router.navigateByUrl('/login');\r\n      this.toaster.warning('Logged out', 'LOG OUT')\r\n    } else {\r\n      // Do nothing!\r\n      this.toaster.info('Thanks for Staying')\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    // this.router.navigate['login']\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpClientModule, HttpErrorResponse, HttpHeaders, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n//map is not working if not imported\r\nimport { map } from \"rxjs/operators\";\r\n\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  //public domain = \"http://localhost:3000\";\r\n  //public domain = \"cryptic-anchorage-20422.herokuapp.com:3000\";\r\n  authToken;\r\n  user;\r\n  options;\r\n\r\n  constructor(\r\n\r\n    private http: HttpClient,\r\n    public jwtHelper: JwtHelperService\r\n\r\n  ) { }\r\n\r\n  handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'Unknown error!';\r\n    if (error.error instanceof ErrorEvent) {\r\n      // Client-side errors\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      // Server-side errors\r\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n    }\r\n    window.alert(errorMessage);\r\n    return throwError(errorMessage);\r\n  }\r\n\r\n\r\n\r\n  createAuthenticationHeaders() {\r\n\r\n    this.loadToken();\r\n    this.options = new HttpHeaders({\r\n      'Content-Type': 'application/json',\r\n      'authorization': this.authToken\r\n    })\r\n\r\n\r\n  }\r\n\r\n\r\n  loadToken() {\r\n    const token = localStorage.getItem('token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  registerUser(user) {\r\n    return this.http.post('/authentication/register', user)\r\n    // return this.http.post(this.domain + '/authentication/register', user)\r\n  }\r\n\r\n\r\n  checkUsername(username) {\r\n    return this.http.get('/authentication/checkUsername/' + username);\r\n    // return this.http.get(this.domain + '/authentication/checkUsername/' + username);\r\n  }\r\n\r\n\r\n\r\n  checkEmail(email) {\r\n    return this.http.get('/authentication/checkEmail/' + email)\r\n    // return this.http.get(this.domain + '/authentication/checkEmail/' + email)\r\n  }\r\n\r\n  // Function to login user\r\n  login(user) {\r\n\r\n\r\n\r\n    return this.http.post('/authentication/login', user)\r\n    // return this.http.post(this.domain + '/authentication/login', user)\r\n  }\r\n\r\n  logout() {\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n\r\n  }\r\n\r\n  loggedOut() {\r\n\r\n    return this.jwtHelper.isTokenExpired()\r\n\r\n  }\r\n\r\n\r\n  // Function to store user's data in client local storage\r\n  storeUserData(token, user, tokenUsername) {\r\n    localStorage.setItem('token', token); // Set token in local storage\r\n    localStorage.setItem('tokenUsername', user.username); // Set token in local storage\r\n    localStorage.setItem('user', JSON.stringify(user)); // Set user in local storage as string\r\n    this.authToken = token; // Assign token to be used elsewhere\r\n    this.user = user; // Set user to be used elsewhere\r\n  }\r\n\r\n  getTokenUsername() {\r\n    return localStorage.getItem('tokenUsername');\r\n  }\r\n\r\n\r\n  getProfile() {\r\n\r\n    //this.options => is not working but with {headers : this.options} is working i read it i guess in angular docs\r\n    //'@auth0/angular-jwt'; is adding 'Bearer ' in token so i removed it manually\r\n    this.createAuthenticationHeaders()\r\n    return this.http.get('/authentication/profile', { headers: this.options })\r\n    // return this.http.get(this.domain + '/authentication/profile', { headers: this.options })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n\r\n this.http.get(url)\r\n      .subscribe((data: GithubUser) => {\r\n        // Data extraction from the HTTP response is already done\r\n        // Display the result\r\n        console.log('TJ user data', data);\r\n      });\r\n\r\n      .map(response => response.json())\r\n            .catch(error => Observable.throw(\"Error in x service\"));\r\n\r\n*/\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { paths } from './app-paths';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PathResolveService implements Resolve<string | null> {\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): string | null {\r\n    const typoPath = state.url.replace('/', '');\r\n    const threshold = this.getThreshold(typoPath);\r\n    const dictionary = Object.values(paths)\r\n      .filter(path => Math.abs(path.length - typoPath.length) < threshold);\r\n\r\n    if (!dictionary.length) { return null; }\r\n\r\n    this.sortByDistances(typoPath, dictionary);\r\n\r\n    return `/${dictionary[0]}`;\r\n  }\r\n\r\n  getThreshold(path: string): number {\r\n    if (path.length < 5) { return 3; }\r\n\r\n    return 5;\r\n  }\r\n\r\n  sortByDistances(typoPath: string, dictionary: string[]) {\r\n    const pathsDistance = {} as { [name: string]: number };\r\n\r\n    dictionary.sort((a, b) => {\r\n      if (!(a in pathsDistance)) {\r\n        pathsDistance[a] = this.levenshtein(a, typoPath);\r\n      }\r\n      if (!(b in pathsDistance)) {\r\n        pathsDistance[b] = this.levenshtein(b, typoPath);\r\n      }\r\n\r\n      return pathsDistance[a] - pathsDistance[b];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Calculate the levenshtein distance of two strings.\r\n   * See https://en.wikipedia.org/wiki/Levenshtein_distance.\r\n   * Based off https://gist.github.com/andrei-m/982927 (for using the faster dynamic programming\r\n   * version).\r\n   *\r\n   * @param a String a.\r\n   * @param b String b.\r\n   * @returns A number that represents the distance between the two strings. The greater the number\r\n   *   the more distant the strings are from each others.\r\n   */\r\n  levenshtein(a: string, b: string): number {\r\n    if (a.length === 0) {\r\n      return b.length;\r\n    }\r\n    if (b.length === 0) {\r\n      return a.length;\r\n    }\r\n\r\n    const matrix = [];\r\n\r\n    // increment along the first column of each row\r\n    for (let i = 0; i <= b.length; i++) {\r\n      matrix[i] = [i];\r\n    }\r\n\r\n    // increment each column in the first row\r\n    for (let j = 0; j <= a.length; j++) {\r\n      matrix[0][j] = j;\r\n    }\r\n\r\n    // Fill in the rest of the matrix\r\n    for (let i = 1; i <= b.length; i++) {\r\n      for (let j = 1; j <= a.length; j++) {\r\n        if (b.charAt(i - 1) === a.charAt(j - 1)) {\r\n          matrix[i][j] = matrix[i - 1][j - 1];\r\n        } else {\r\n          matrix[i][j] = Math.min(\r\n            matrix[i - 1][j - 1] + 1, // substitution\r\n            matrix[i][j - 1] + 1, // insertion\r\n            matrix[i - 1][j] + 1, // deletion\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    return matrix[b.length][a.length];\r\n  }\r\n}\r\n","import { ExtraOptions, RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { NotfoundComponent } from './components/notfound/notfound.component';\r\nimport { PathResolveService } from './path-resolve.service';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { paths } from './app-paths';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: paths.home, component: HomeComponent },\r\n  { path: paths.login, component: LoginComponent },\r\n  { path: paths.dashboard, component: DashboardComponent },\r\n  { path: paths.register, component: RegisterComponent },\r\n  { path: paths.profile, component: ProfileComponent },\r\n  {\r\n    path: '**',\r\n    resolve: {\r\n      path: PathResolveService\r\n    },\r\n    component: NotfoundComponent\r\n  }\r\n\r\n];\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  providers: [],\r\n  bootstrap: []\r\n})\r\nexport class AppRoutingModule { }\r\n\r\n\r\n/*\r\n\r\n {\r\n    path: paths.home,\r\n    component: HomeComponent\r\n  },\r\n   imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n\r\n*/\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}